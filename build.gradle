plugins {
    id "architectury-plugin" version "3.4-SNAPSHOT"
    id "dev.architectury.loom" version "0.12.0-SNAPSHOT" apply false
    id "com.modrinth.minotaur" version "2.+"
    id "com.matthewprenger.cursegradle" version "1.4.0"
}

architectury {
    minecraft = rootProject.minecraft_version
}

subprojects {
    apply plugin: "dev.architectury.loom"
    apply plugin: "com.modrinth.minotaur"
    apply plugin: "com.matthewprenger.cursegradle"

    version = "${rootProject.mod_version}+${rootProject.minecraft_version}-${name}"

    loom {
        silentMojangMappingsLicense()
    }

    dependencies {
        minecraft "com.mojang:minecraft:${rootProject.minecraft_version}"
        mappings loom.officialMojangMappings()
    }

    Map<String, Map<String, String>> platformSettings = [
            "fabric": [
                    "curse-id": "849817",
                    "modrinth-id": "oZiSDGCi"
            ],
            "quilt": [
                    "curse-id": "849817",
                    "modrinth-id": "oZiSDGCi"
            ],
            "forge": [
                    "curse-id": "849817",
                    "modrinth-id": "oZiSDGCi"
            ]
    ]

    Map<String, Map<String, Boolean>> platformDependencies = [
            "fabric": [
                "fabric-api": true
            ],
            "quilt": [
                "qsl": true
            ],
            "forge": []
    ]

    var env = System.getenv()
    def uploadSettings = platformSettings.get(name)
    def uploadDependencies = platformDependencies.get(name)

    if (uploadSettings != null && uploadDependencies != null) {

        File changeLog = rootProject.file("CHANGELOG.md")
        String changeLogText = changeLog.exists() ? changeLog.text : ""

        if (env.MODRINTH) {
            modrinth {
                token = env.MODRINTH
                versionName = "FullStack Watchdog"
                versionNumber = "${project.version}"
                changelog = changeLogText
                projectId = uploadSettings["modrinth-id"]

                gameVersions = ["${rootProject.minecraft_version}"]
                loaders = [name]
                versionType = "RELEASE"

                uploadFile = tasks.remapJar

                dependencies {
                    def optionalContainer = getOptional()
                    def requiredContainer = getRequired()
                    uploadDependencies.each { dep, required ->
                        if (required) {
                            requiredContainer.project(dep)
                        } else {
                            optionalContainer.project(dep)
                        }
                    }
                }
            }
        }

        if (env.CURSEFORGEKEY) {
            curseforge {
                apiKey = env.CURSEFORGEKEY
                project { proj ->
                    id = uploadSettings["curse-id"]
                    changelogType = "markdown"
                    changelog = changeLogText
                    releaseType = "release"

                    addGameVersion("${rootProject.minecraft_version}")
                    addGameVersion(name.capitalize())

                    mainArtifact(tasks.remapJar) {
                        displayName = "FullStack Watchdog v${rootProject.mod_version} (${rootProject.minecraft_version} MC ${name.capitalize()})"
                    }

                    if (uploadDependencies.size() > 0) {
                        relations {
                            uploadDependencies.each { dep, required ->
                                if (required) {
                                    requiredDependency(dep)
                                }
                                else {
                                    optionalDependency(dep)
                                }
                            }
                        }
                    }
                }
            }
        }
    }
}

allprojects {
    apply plugin: "java"
    apply plugin: "architectury-plugin"
    apply plugin: "maven-publish"

    archivesBaseName = rootProject.archives_base_name
    version = "${rootProject.mod_version}+${rootProject.minecraft_version}-${name}"
    group = rootProject.maven_group

    repositories {
        maven { url = 'https://maven.quiltmc.org/repository/release' }
        maven { url "https://maven.architectury.dev/" }
        maven {
            url = 'https://jitpack.io'
            content {
                includeGroup 'com.github.LlamaLad7'
                includeGroup 'com.github.llamalad7.mixinextras'
            }
        }
    }

    tasks.withType(JavaCompile) {
        options.encoding = "UTF-8"
        options.release = 17
    }

    java {
        withSourcesJar()
    }
}

task buildAndReleaseAll{
    dependsOn(':forge:buildAndRelease', ':fabric:buildAndRelease', ':quilt:buildAndRelease')
}